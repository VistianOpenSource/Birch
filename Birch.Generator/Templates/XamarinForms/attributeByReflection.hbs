{{! Template expects content to be defined by a AttributePropertyModel instance}}\r\n    public static partial class {{nameTidy DefiningType}}_Extensions\r\n    {\r\n        private static readonly Attribute<{{{FullTypeName}}}> Attribute_{{nameTidy ShortTypeName}}_{{Name}} = AttributeReflectionHelper.ResolveFor<{{DefiningType}}, {{{FullTypeName}}}>\r\n        (v => v.{{Name}});\r\n\r\n        {{#if Notes}}\r\n        ///<remarks>\r\n        /// {{nameTidy Notes}}\r\n        ///</remarks>\r\n        {{/if}}\r\n        public static TControl {{Name}}<TControl>(this TControl component, {{{FullTypeName}}} p{{Name}})  where TControl:IReflectedPrimitive<{{DefiningType}}>\r\n        {\r\n            if (Components.Primitives.NeverInclude)   \r\n            {\r\n                {{DefiningType}} t = default;\r\n                t.{{Name}} = default;\r\n            }\r\n\r\n            component.Attributes.SetAttribute(Attribute_{{nameTidy ShortTypeName}}_{{Name}},p{{Name}});\r\n            return component;\r\n        }\r\n    }\r\n